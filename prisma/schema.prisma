// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  picUrl    String?
  phone     String
  createdAt DateTime @default(now())

  addressId         String
  address           Address            @relation(fields: [addressId], references: [id])
  pet               Pet[]
  notInterestedPets NotInterestedPet[]
  interestedPets    InterestedPet[]

  @@map("users")
}

model Address {
  id       String @id @default(cuid())
  cep      String
  street   String
  state    String
  city     String
  district String
  user     User[]

  @@map("addresses")
}

model NotInterestedPet {
  id     Int    @id @default(autoincrement())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  petId  Int
  pet    Pet    @relation(fields: [petId], references: [id])

  @@map("not_interested_pets")
}

model InterestedPet {
  id     Int    @id @default(autoincrement())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  petId  Int
  pet    Pet    @relation(fields: [petId], references: [id])

  @@map("interested_pets")
}

model Pet {
  id         Int     @id @default(autoincrement())
  name       String
  age        Int
  weight     Float
  sex        PetSex
  vaccinated Boolean
  about      String

  petTypeId Int
  type      PetType @relation(fields: [petTypeId], references: [id])

  ownerId   String
  ownerUser User   @relation(fields: [ownerId], references: [id])

  breedId Int
  breed   Breed @relation(fields: [breedId], references: [id])

  createdAt         DateTime           @default(now())
  petPictures       PetPictures[]
  notInterestedPets NotInterestedPet[]
  interestedPets    InterestedPet[]

  @@map("pets")
}

enum PetSex {
  Male
  Female

  @@map("pet_sex")
}

model Breed {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  pets      Pet[]

  petTypeId Int
  type      PetType @relation(fields: [petTypeId], references: [id])

  @@map("breeds")
}

model PetPictures {
  id        Int      @id @default(autoincrement())
  petId     Int
  pet       Pet      @relation(fields: [petId], references: [id])
  pictureId Int
  picture   Picture  @relation(fields: [pictureId], references: [id])
  createdAt DateTime @default(now())

  @@map("pet_pictures")
}

model Picture {
  id          Int           @id @default(autoincrement())
  url         String
  createdAt   DateTime      @default(now())
  petPictures PetPictures[]

  @@map("pictures")
}

model PetType {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  pets      Pet[]
  Breed     Breed[]

  @@map("pet_types")
}
